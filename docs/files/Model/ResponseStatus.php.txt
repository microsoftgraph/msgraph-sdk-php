<?php
/**
* Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
* 
* ResponseStatus File
* PHP version 7
*
* @category  Library
* @package   Microsoft.Graph
* @author    Caitlin Bales <caitbal@microsoft.com>
* @copyright 2016 Microsoft Corporation
* @license   https://opensource.org/licenses/MIT MIT License
* @version   GIT: 0.1.0
* @link      https://graph.microsoft.io/
*/
namespace Microsoft\Graph\Model;
/**
* ResponseStatus class
*
* @category  Model
* @package   Microsoft.Graph
* @author    Caitlin Bales <caitbal@microsoft.com>
* @copyright 2016 Microsoft Corporation
* @license   https://opensource.org/licenses/MIT MIT License
* @version   Release: 0.1.0
* @link      https://graph.microsoft.io/
*/
class ResponseStatus
{
    /**
    * The array of properties available 
    * to the model
    *
    * @var array(string => string)
    */
    private $_propDict;
    /**
    * ResponseStatus constructor
    *
    * @param array $propDict List of properties to set
    * Defaults to an empty array
    *
    * @return null
    */
    public function __construct($propDict=array())
    {
        $this->_propDict = $propDict;
    }

    /**
    * Gets the response
    *
    * @return ResponseType The response
    */
    public function getResponse()
    {
        if (array_key_exists("response", $this->propDict)) {
            if (is_a($this->propDict["response"], 'ResponseType')) {
                return $this->propDict["response"];
            } else {
                $this->propDict["response"] = new ResponseType($this->propDict["response"]);
                return $this->propDict["response"];
            }
        }
        return null;
    }

    /**
    * Sets the response
    *
    * @param ResponseType $val The value to assign to the response
    *
    * @return null
    */
    public function setResponse($val)
    {
        $this->propDict["response"] = $val;
    }
    
    /**
    * Gets the time
    *
    * @return datetime The time
    */
    public function getTime()
    {
        if (array_key_exists("time", $this->propDict)) {
            return new \DateTime($this->_propDict["time"]);
        } else {
            return null;
        }
    }

    /**
    * Sets the time
    *
    * @param datetime $val The value of the time
    *
    * @return null
    */
    public function setTime($val)
    {
        $this->_propDict["time"] 
            = $val->format(\DateTime::ISO8601) . "Z";
    }
}

