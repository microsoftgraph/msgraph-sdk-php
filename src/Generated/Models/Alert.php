<?php

namespace Microsoft\Graph\Generated\Models;

use DateTime;
use Microsoft\Kiota\Abstractions\Serialization\Parsable;
use Microsoft\Kiota\Abstractions\Serialization\ParseNode;
use Microsoft\Kiota\Abstractions\Serialization\SerializationWriter;

class Alert extends Entity implements Parsable 
{
    /**
     * @var string|null $activityGroupName Name or alias of the activity group (attacker) this alert is attributed to.
    */
    private ?string $activityGroupName = null;
    
    /**
     * @var array<AlertDetection>|null $alertDetections The alertDetections property
    */
    private ?array $alertDetections = null;
    
    /**
     * @var string|null $assignedTo Name of the analyst the alert is assigned to for triage, investigation, or remediation (supports update).
    */
    private ?string $assignedTo = null;
    
    /**
     * @var string|null $azureSubscriptionId Azure subscription ID, present if this alert is related to an Azure resource.
    */
    private ?string $azureSubscriptionId = null;
    
    /**
     * @var string|null $azureTenantId Azure Active Directory tenant ID. Required.
    */
    private ?string $azureTenantId = null;
    
    /**
     * @var string|null $category Category of the alert (for example, credentialTheft, ransomware, etc.).
    */
    private ?string $category = null;
    
    /**
     * @var DateTime|null $closedDateTime Time at which the alert was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z (supports update).
    */
    private ?DateTime $closedDateTime = null;
    
    /**
     * @var array<CloudAppSecurityState>|null $cloudAppStates Security-related stateful information generated by the provider about the cloud application/s related to this alert.
    */
    private ?array $cloudAppStates = null;
    
    /**
     * @var array<string>|null $comments Customer-provided comments on alert (for customer alert management) (supports update).
    */
    private ?array $comments = null;
    
    /**
     * @var int|null $confidence Confidence of the detection logic (percentage between 1-100).
    */
    private ?int $confidence = null;
    
    /**
     * @var DateTime|null $createdDateTime Time at which the alert was created by the alert provider. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
    */
    private ?DateTime $createdDateTime = null;
    
    /**
     * @var string|null $description Alert description.
    */
    private ?string $description = null;
    
    /**
     * @var array<string>|null $detectionIds Set of alerts related to this alert entity (each alert is pushed to the SIEM as a separate record).
    */
    private ?array $detectionIds = null;
    
    /**
     * @var DateTime|null $eventDateTime Time at which the event(s) that served as the trigger(s) to generate the alert occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
    */
    private ?DateTime $eventDateTime = null;
    
    /**
     * @var AlertFeedback|null $feedback Analyst feedback on the alert. Possible values are: unknown, truePositive, falsePositive, benignPositive. (supports update)
    */
    private ?AlertFeedback $feedback = null;
    
    /**
     * @var array<FileSecurityState>|null $fileStates Security-related stateful information generated by the provider about the file(s) related to this alert.
    */
    private ?array $fileStates = null;
    
    /**
     * @var array<AlertHistoryState>|null $historyStates The historyStates property
    */
    private ?array $historyStates = null;
    
    /**
     * @var array<HostSecurityState>|null $hostStates Security-related stateful information generated by the provider about the host(s) related to this alert.
    */
    private ?array $hostStates = null;
    
    /**
     * @var array<string>|null $incidentIds IDs of incidents related to current alert.
    */
    private ?array $incidentIds = null;
    
    /**
     * @var array<InvestigationSecurityState>|null $investigationSecurityStates The investigationSecurityStates property
    */
    private ?array $investigationSecurityStates = null;
    
    /**
     * @var DateTime|null $lastEventDateTime The lastEventDateTime property
    */
    private ?DateTime $lastEventDateTime = null;
    
    /**
     * @var DateTime|null $lastModifiedDateTime Time at which the alert entity was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
    */
    private ?DateTime $lastModifiedDateTime = null;
    
    /**
     * @var array<MalwareState>|null $malwareStates Threat Intelligence pertaining to malware related to this alert.
    */
    private ?array $malwareStates = null;
    
    /**
     * @var array<MessageSecurityState>|null $messageSecurityStates The messageSecurityStates property
    */
    private ?array $messageSecurityStates = null;
    
    /**
     * @var array<NetworkConnection>|null $networkConnections Security-related stateful information generated by the provider about the network connection(s) related to this alert.
    */
    private ?array $networkConnections = null;
    
    /**
     * @var array<Process>|null $processes Security-related stateful information generated by the provider about the process or processes related to this alert.
    */
    private ?array $processes = null;
    
    /**
     * @var array<string>|null $recommendedActions Vendor/provider recommended action(s) to take as a result of the alert (for example, isolate machine, enforce2FA, reimage host).
    */
    private ?array $recommendedActions = null;
    
    /**
     * @var array<RegistryKeyState>|null $registryKeyStates Security-related stateful information generated by the provider about the registry keys related to this alert.
    */
    private ?array $registryKeyStates = null;
    
    /**
     * @var array<SecurityResource>|null $securityResources Resources related to current alert. For example, for some alerts this can have the Azure Resource value.
    */
    private ?array $securityResources = null;
    
    /**
     * @var AlertSeverity|null $severity The severity property
    */
    private ?AlertSeverity $severity = null;
    
    /**
     * @var array<string>|null $sourceMaterials Hyperlinks (URIs) to the source material related to the alert, for example, provider's user interface for alerts or log search, etc.
    */
    private ?array $sourceMaterials = null;
    
    /**
     * @var AlertStatus|null $status The status property
    */
    private ?AlertStatus $status = null;
    
    /**
     * @var array<string>|null $tags User-definable labels that can be applied to an alert and can serve as filter conditions (for example 'HVA', 'SAW', etc.) (supports update).
    */
    private ?array $tags = null;
    
    /**
     * @var string|null $title Alert title. Required.
    */
    private ?string $title = null;
    
    /**
     * @var array<AlertTrigger>|null $triggers Security-related information about the specific properties that triggered the alert (properties appearing in the alert). Alerts might contain information about multiple users, hosts, files, ip addresses. This field indicates which properties triggered the alert generation.
    */
    private ?array $triggers = null;
    
    /**
     * @var array<UriClickSecurityState>|null $uriClickSecurityStates The uriClickSecurityStates property
    */
    private ?array $uriClickSecurityStates = null;
    
    /**
     * @var array<UserSecurityState>|null $userStates Security-related stateful information generated by the provider about the user accounts related to this alert.
    */
    private ?array $userStates = null;
    
    /**
     * @var SecurityVendorInformation|null $vendorInformation Complex type containing details about the security product/service vendor, provider, and subprovider (for example, vendor=Microsoft; provider=Windows Defender ATP; subProvider=AppLocker). Required.
    */
    private ?SecurityVendorInformation $vendorInformation = null;
    
    /**
     * @var array<VulnerabilityState>|null $vulnerabilityStates Threat intelligence pertaining to one or more vulnerabilities related to this alert.
    */
    private ?array $vulnerabilityStates = null;
    
    /**
     * Instantiates a new Alert and sets the default values.
    */
    public function __construct() {
        parent::__construct();
        $this->setOdataType('#microsoft.graph.alert');
    }

    /**
     * Creates a new instance of the appropriate class based on discriminator value
     * @param ParseNode $parseNode The parse node to use to read the discriminator value and create the object
     * @return Alert
    */
    public static function createFromDiscriminatorValue(ParseNode $parseNode): Alert {
        return new Alert();
    }

    /**
     * Gets the activityGroupName property value. Name or alias of the activity group (attacker) this alert is attributed to.
     * @return string|null
    */
    public function getActivityGroupName(): ?string {
        return $this->activityGroupName;
    }

    /**
     * Gets the alertDetections property value. The alertDetections property
     * @return array<AlertDetection>|null
    */
    public function getAlertDetections(): ?array {
        return $this->alertDetections;
    }

    /**
     * Gets the assignedTo property value. Name of the analyst the alert is assigned to for triage, investigation, or remediation (supports update).
     * @return string|null
    */
    public function getAssignedTo(): ?string {
        return $this->assignedTo;
    }

    /**
     * Gets the azureSubscriptionId property value. Azure subscription ID, present if this alert is related to an Azure resource.
     * @return string|null
    */
    public function getAzureSubscriptionId(): ?string {
        return $this->azureSubscriptionId;
    }

    /**
     * Gets the azureTenantId property value. Azure Active Directory tenant ID. Required.
     * @return string|null
    */
    public function getAzureTenantId(): ?string {
        return $this->azureTenantId;
    }

    /**
     * Gets the category property value. Category of the alert (for example, credentialTheft, ransomware, etc.).
     * @return string|null
    */
    public function getCategory(): ?string {
        return $this->category;
    }

    /**
     * Gets the closedDateTime property value. Time at which the alert was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z (supports update).
     * @return DateTime|null
    */
    public function getClosedDateTime(): ?DateTime {
        return $this->closedDateTime;
    }

    /**
     * Gets the cloudAppStates property value. Security-related stateful information generated by the provider about the cloud application/s related to this alert.
     * @return array<CloudAppSecurityState>|null
    */
    public function getCloudAppStates(): ?array {
        return $this->cloudAppStates;
    }

    /**
     * Gets the comments property value. Customer-provided comments on alert (for customer alert management) (supports update).
     * @return array<string>|null
    */
    public function getComments(): ?array {
        return $this->comments;
    }

    /**
     * Gets the confidence property value. Confidence of the detection logic (percentage between 1-100).
     * @return int|null
    */
    public function getConfidence(): ?int {
        return $this->confidence;
    }

    /**
     * Gets the createdDateTime property value. Time at which the alert was created by the alert provider. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
     * @return DateTime|null
    */
    public function getCreatedDateTime(): ?DateTime {
        return $this->createdDateTime;
    }

    /**
     * Gets the description property value. Alert description.
     * @return string|null
    */
    public function getDescription(): ?string {
        return $this->description;
    }

    /**
     * Gets the detectionIds property value. Set of alerts related to this alert entity (each alert is pushed to the SIEM as a separate record).
     * @return array<string>|null
    */
    public function getDetectionIds(): ?array {
        return $this->detectionIds;
    }

    /**
     * Gets the eventDateTime property value. Time at which the event(s) that served as the trigger(s) to generate the alert occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
     * @return DateTime|null
    */
    public function getEventDateTime(): ?DateTime {
        return $this->eventDateTime;
    }

    /**
     * Gets the feedback property value. Analyst feedback on the alert. Possible values are: unknown, truePositive, falsePositive, benignPositive. (supports update)
     * @return AlertFeedback|null
    */
    public function getFeedback(): ?AlertFeedback {
        return $this->feedback;
    }

    /**
     * The deserialization information for the current model
     * @return array<string, callable>
    */
    public function getFieldDeserializers(): array {
        $o = $this;
        return array_merge(parent::getFieldDeserializers(), [
            'activityGroupName' => function (ParseNode $n) use ($o) { $o->setActivityGroupName($n->getStringValue()); },
            'alertDetections' => function (ParseNode $n) use ($o) { $o->setAlertDetections($n->getCollectionOfObjectValues(array(AlertDetection::class, 'createFromDiscriminatorValue'))); },
            'assignedTo' => function (ParseNode $n) use ($o) { $o->setAssignedTo($n->getStringValue()); },
            'azureSubscriptionId' => function (ParseNode $n) use ($o) { $o->setAzureSubscriptionId($n->getStringValue()); },
            'azureTenantId' => function (ParseNode $n) use ($o) { $o->setAzureTenantId($n->getStringValue()); },
            'category' => function (ParseNode $n) use ($o) { $o->setCategory($n->getStringValue()); },
            'closedDateTime' => function (ParseNode $n) use ($o) { $o->setClosedDateTime($n->getDateTimeValue()); },
            'cloudAppStates' => function (ParseNode $n) use ($o) { $o->setCloudAppStates($n->getCollectionOfObjectValues(array(CloudAppSecurityState::class, 'createFromDiscriminatorValue'))); },
            'comments' => function (ParseNode $n) use ($o) { $o->setComments($n->getCollectionOfPrimitiveValues()); },
            'confidence' => function (ParseNode $n) use ($o) { $o->setConfidence($n->getIntegerValue()); },
            'createdDateTime' => function (ParseNode $n) use ($o) { $o->setCreatedDateTime($n->getDateTimeValue()); },
            'description' => function (ParseNode $n) use ($o) { $o->setDescription($n->getStringValue()); },
            'detectionIds' => function (ParseNode $n) use ($o) { $o->setDetectionIds($n->getCollectionOfPrimitiveValues()); },
            'eventDateTime' => function (ParseNode $n) use ($o) { $o->setEventDateTime($n->getDateTimeValue()); },
            'feedback' => function (ParseNode $n) use ($o) { $o->setFeedback($n->getEnumValue(AlertFeedback::class)); },
            'fileStates' => function (ParseNode $n) use ($o) { $o->setFileStates($n->getCollectionOfObjectValues(array(FileSecurityState::class, 'createFromDiscriminatorValue'))); },
            'historyStates' => function (ParseNode $n) use ($o) { $o->setHistoryStates($n->getCollectionOfObjectValues(array(AlertHistoryState::class, 'createFromDiscriminatorValue'))); },
            'hostStates' => function (ParseNode $n) use ($o) { $o->setHostStates($n->getCollectionOfObjectValues(array(HostSecurityState::class, 'createFromDiscriminatorValue'))); },
            'incidentIds' => function (ParseNode $n) use ($o) { $o->setIncidentIds($n->getCollectionOfPrimitiveValues()); },
            'investigationSecurityStates' => function (ParseNode $n) use ($o) { $o->setInvestigationSecurityStates($n->getCollectionOfObjectValues(array(InvestigationSecurityState::class, 'createFromDiscriminatorValue'))); },
            'lastEventDateTime' => function (ParseNode $n) use ($o) { $o->setLastEventDateTime($n->getDateTimeValue()); },
            'lastModifiedDateTime' => function (ParseNode $n) use ($o) { $o->setLastModifiedDateTime($n->getDateTimeValue()); },
            'malwareStates' => function (ParseNode $n) use ($o) { $o->setMalwareStates($n->getCollectionOfObjectValues(array(MalwareState::class, 'createFromDiscriminatorValue'))); },
            'messageSecurityStates' => function (ParseNode $n) use ($o) { $o->setMessageSecurityStates($n->getCollectionOfObjectValues(array(MessageSecurityState::class, 'createFromDiscriminatorValue'))); },
            'networkConnections' => function (ParseNode $n) use ($o) { $o->setNetworkConnections($n->getCollectionOfObjectValues(array(NetworkConnection::class, 'createFromDiscriminatorValue'))); },
            'processes' => function (ParseNode $n) use ($o) { $o->setProcesses($n->getCollectionOfObjectValues(array(Process::class, 'createFromDiscriminatorValue'))); },
            'recommendedActions' => function (ParseNode $n) use ($o) { $o->setRecommendedActions($n->getCollectionOfPrimitiveValues()); },
            'registryKeyStates' => function (ParseNode $n) use ($o) { $o->setRegistryKeyStates($n->getCollectionOfObjectValues(array(RegistryKeyState::class, 'createFromDiscriminatorValue'))); },
            'securityResources' => function (ParseNode $n) use ($o) { $o->setSecurityResources($n->getCollectionOfObjectValues(array(SecurityResource::class, 'createFromDiscriminatorValue'))); },
            'severity' => function (ParseNode $n) use ($o) { $o->setSeverity($n->getEnumValue(AlertSeverity::class)); },
            'sourceMaterials' => function (ParseNode $n) use ($o) { $o->setSourceMaterials($n->getCollectionOfPrimitiveValues()); },
            'status' => function (ParseNode $n) use ($o) { $o->setStatus($n->getEnumValue(AlertStatus::class)); },
            'tags' => function (ParseNode $n) use ($o) { $o->setTags($n->getCollectionOfPrimitiveValues()); },
            'title' => function (ParseNode $n) use ($o) { $o->setTitle($n->getStringValue()); },
            'triggers' => function (ParseNode $n) use ($o) { $o->setTriggers($n->getCollectionOfObjectValues(array(AlertTrigger::class, 'createFromDiscriminatorValue'))); },
            'uriClickSecurityStates' => function (ParseNode $n) use ($o) { $o->setUriClickSecurityStates($n->getCollectionOfObjectValues(array(UriClickSecurityState::class, 'createFromDiscriminatorValue'))); },
            'userStates' => function (ParseNode $n) use ($o) { $o->setUserStates($n->getCollectionOfObjectValues(array(UserSecurityState::class, 'createFromDiscriminatorValue'))); },
            'vendorInformation' => function (ParseNode $n) use ($o) { $o->setVendorInformation($n->getObjectValue(array(SecurityVendorInformation::class, 'createFromDiscriminatorValue'))); },
            'vulnerabilityStates' => function (ParseNode $n) use ($o) { $o->setVulnerabilityStates($n->getCollectionOfObjectValues(array(VulnerabilityState::class, 'createFromDiscriminatorValue'))); },
        ]);
    }

    /**
     * Gets the fileStates property value. Security-related stateful information generated by the provider about the file(s) related to this alert.
     * @return array<FileSecurityState>|null
    */
    public function getFileStates(): ?array {
        return $this->fileStates;
    }

    /**
     * Gets the historyStates property value. The historyStates property
     * @return array<AlertHistoryState>|null
    */
    public function getHistoryStates(): ?array {
        return $this->historyStates;
    }

    /**
     * Gets the hostStates property value. Security-related stateful information generated by the provider about the host(s) related to this alert.
     * @return array<HostSecurityState>|null
    */
    public function getHostStates(): ?array {
        return $this->hostStates;
    }

    /**
     * Gets the incidentIds property value. IDs of incidents related to current alert.
     * @return array<string>|null
    */
    public function getIncidentIds(): ?array {
        return $this->incidentIds;
    }

    /**
     * Gets the investigationSecurityStates property value. The investigationSecurityStates property
     * @return array<InvestigationSecurityState>|null
    */
    public function getInvestigationSecurityStates(): ?array {
        return $this->investigationSecurityStates;
    }

    /**
     * Gets the lastEventDateTime property value. The lastEventDateTime property
     * @return DateTime|null
    */
    public function getLastEventDateTime(): ?DateTime {
        return $this->lastEventDateTime;
    }

    /**
     * Gets the lastModifiedDateTime property value. Time at which the alert entity was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     * @return DateTime|null
    */
    public function getLastModifiedDateTime(): ?DateTime {
        return $this->lastModifiedDateTime;
    }

    /**
     * Gets the malwareStates property value. Threat Intelligence pertaining to malware related to this alert.
     * @return array<MalwareState>|null
    */
    public function getMalwareStates(): ?array {
        return $this->malwareStates;
    }

    /**
     * Gets the messageSecurityStates property value. The messageSecurityStates property
     * @return array<MessageSecurityState>|null
    */
    public function getMessageSecurityStates(): ?array {
        return $this->messageSecurityStates;
    }

    /**
     * Gets the networkConnections property value. Security-related stateful information generated by the provider about the network connection(s) related to this alert.
     * @return array<NetworkConnection>|null
    */
    public function getNetworkConnections(): ?array {
        return $this->networkConnections;
    }

    /**
     * Gets the processes property value. Security-related stateful information generated by the provider about the process or processes related to this alert.
     * @return array<Process>|null
    */
    public function getProcesses(): ?array {
        return $this->processes;
    }

    /**
     * Gets the recommendedActions property value. Vendor/provider recommended action(s) to take as a result of the alert (for example, isolate machine, enforce2FA, reimage host).
     * @return array<string>|null
    */
    public function getRecommendedActions(): ?array {
        return $this->recommendedActions;
    }

    /**
     * Gets the registryKeyStates property value. Security-related stateful information generated by the provider about the registry keys related to this alert.
     * @return array<RegistryKeyState>|null
    */
    public function getRegistryKeyStates(): ?array {
        return $this->registryKeyStates;
    }

    /**
     * Gets the securityResources property value. Resources related to current alert. For example, for some alerts this can have the Azure Resource value.
     * @return array<SecurityResource>|null
    */
    public function getSecurityResources(): ?array {
        return $this->securityResources;
    }

    /**
     * Gets the severity property value. The severity property
     * @return AlertSeverity|null
    */
    public function getSeverity(): ?AlertSeverity {
        return $this->severity;
    }

    /**
     * Gets the sourceMaterials property value. Hyperlinks (URIs) to the source material related to the alert, for example, provider's user interface for alerts or log search, etc.
     * @return array<string>|null
    */
    public function getSourceMaterials(): ?array {
        return $this->sourceMaterials;
    }

    /**
     * Gets the status property value. The status property
     * @return AlertStatus|null
    */
    public function getStatus(): ?AlertStatus {
        return $this->status;
    }

    /**
     * Gets the tags property value. User-definable labels that can be applied to an alert and can serve as filter conditions (for example 'HVA', 'SAW', etc.) (supports update).
     * @return array<string>|null
    */
    public function getTags(): ?array {
        return $this->tags;
    }

    /**
     * Gets the title property value. Alert title. Required.
     * @return string|null
    */
    public function getTitle(): ?string {
        return $this->title;
    }

    /**
     * Gets the triggers property value. Security-related information about the specific properties that triggered the alert (properties appearing in the alert). Alerts might contain information about multiple users, hosts, files, ip addresses. This field indicates which properties triggered the alert generation.
     * @return array<AlertTrigger>|null
    */
    public function getTriggers(): ?array {
        return $this->triggers;
    }

    /**
     * Gets the uriClickSecurityStates property value. The uriClickSecurityStates property
     * @return array<UriClickSecurityState>|null
    */
    public function getUriClickSecurityStates(): ?array {
        return $this->uriClickSecurityStates;
    }

    /**
     * Gets the userStates property value. Security-related stateful information generated by the provider about the user accounts related to this alert.
     * @return array<UserSecurityState>|null
    */
    public function getUserStates(): ?array {
        return $this->userStates;
    }

    /**
     * Gets the vendorInformation property value. Complex type containing details about the security product/service vendor, provider, and subprovider (for example, vendor=Microsoft; provider=Windows Defender ATP; subProvider=AppLocker). Required.
     * @return SecurityVendorInformation|null
    */
    public function getVendorInformation(): ?SecurityVendorInformation {
        return $this->vendorInformation;
    }

    /**
     * Gets the vulnerabilityStates property value. Threat intelligence pertaining to one or more vulnerabilities related to this alert.
     * @return array<VulnerabilityState>|null
    */
    public function getVulnerabilityStates(): ?array {
        return $this->vulnerabilityStates;
    }

    /**
     * Serializes information the current object
     * @param SerializationWriter $writer Serialization writer to use to serialize this model
    */
    public function serialize(SerializationWriter $writer): void {
        parent::serialize($writer);
        $writer->writeStringValue('activityGroupName', $this->activityGroupName);
        $writer->writeCollectionOfObjectValues('alertDetections', $this->alertDetections);
        $writer->writeStringValue('assignedTo', $this->assignedTo);
        $writer->writeStringValue('azureSubscriptionId', $this->azureSubscriptionId);
        $writer->writeStringValue('azureTenantId', $this->azureTenantId);
        $writer->writeStringValue('category', $this->category);
        $writer->writeDateTimeValue('closedDateTime', $this->closedDateTime);
        $writer->writeCollectionOfObjectValues('cloudAppStates', $this->cloudAppStates);
        $writer->writeCollectionOfPrimitiveValues('comments', $this->comments);
        $writer->writeIntegerValue('confidence', $this->confidence);
        $writer->writeDateTimeValue('createdDateTime', $this->createdDateTime);
        $writer->writeStringValue('description', $this->description);
        $writer->writeCollectionOfPrimitiveValues('detectionIds', $this->detectionIds);
        $writer->writeDateTimeValue('eventDateTime', $this->eventDateTime);
        $writer->writeEnumValue('feedback', $this->feedback);
        $writer->writeCollectionOfObjectValues('fileStates', $this->fileStates);
        $writer->writeCollectionOfObjectValues('historyStates', $this->historyStates);
        $writer->writeCollectionOfObjectValues('hostStates', $this->hostStates);
        $writer->writeCollectionOfPrimitiveValues('incidentIds', $this->incidentIds);
        $writer->writeCollectionOfObjectValues('investigationSecurityStates', $this->investigationSecurityStates);
        $writer->writeDateTimeValue('lastEventDateTime', $this->lastEventDateTime);
        $writer->writeDateTimeValue('lastModifiedDateTime', $this->lastModifiedDateTime);
        $writer->writeCollectionOfObjectValues('malwareStates', $this->malwareStates);
        $writer->writeCollectionOfObjectValues('messageSecurityStates', $this->messageSecurityStates);
        $writer->writeCollectionOfObjectValues('networkConnections', $this->networkConnections);
        $writer->writeCollectionOfObjectValues('processes', $this->processes);
        $writer->writeCollectionOfPrimitiveValues('recommendedActions', $this->recommendedActions);
        $writer->writeCollectionOfObjectValues('registryKeyStates', $this->registryKeyStates);
        $writer->writeCollectionOfObjectValues('securityResources', $this->securityResources);
        $writer->writeEnumValue('severity', $this->severity);
        $writer->writeCollectionOfPrimitiveValues('sourceMaterials', $this->sourceMaterials);
        $writer->writeEnumValue('status', $this->status);
        $writer->writeCollectionOfPrimitiveValues('tags', $this->tags);
        $writer->writeStringValue('title', $this->title);
        $writer->writeCollectionOfObjectValues('triggers', $this->triggers);
        $writer->writeCollectionOfObjectValues('uriClickSecurityStates', $this->uriClickSecurityStates);
        $writer->writeCollectionOfObjectValues('userStates', $this->userStates);
        $writer->writeObjectValue('vendorInformation', $this->vendorInformation);
        $writer->writeCollectionOfObjectValues('vulnerabilityStates', $this->vulnerabilityStates);
    }

    /**
     * Sets the activityGroupName property value. Name or alias of the activity group (attacker) this alert is attributed to.
     *  @param string|null $value Value to set for the activityGroupName property.
    */
    public function setActivityGroupName(?string $value ): void {
        $this->activityGroupName = $value;
    }

    /**
     * Sets the alertDetections property value. The alertDetections property
     *  @param array<AlertDetection>|null $value Value to set for the alertDetections property.
    */
    public function setAlertDetections(?array $value ): void {
        $this->alertDetections = $value;
    }

    /**
     * Sets the assignedTo property value. Name of the analyst the alert is assigned to for triage, investigation, or remediation (supports update).
     *  @param string|null $value Value to set for the assignedTo property.
    */
    public function setAssignedTo(?string $value ): void {
        $this->assignedTo = $value;
    }

    /**
     * Sets the azureSubscriptionId property value. Azure subscription ID, present if this alert is related to an Azure resource.
     *  @param string|null $value Value to set for the azureSubscriptionId property.
    */
    public function setAzureSubscriptionId(?string $value ): void {
        $this->azureSubscriptionId = $value;
    }

    /**
     * Sets the azureTenantId property value. Azure Active Directory tenant ID. Required.
     *  @param string|null $value Value to set for the azureTenantId property.
    */
    public function setAzureTenantId(?string $value ): void {
        $this->azureTenantId = $value;
    }

    /**
     * Sets the category property value. Category of the alert (for example, credentialTheft, ransomware, etc.).
     *  @param string|null $value Value to set for the category property.
    */
    public function setCategory(?string $value ): void {
        $this->category = $value;
    }

    /**
     * Sets the closedDateTime property value. Time at which the alert was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z (supports update).
     *  @param DateTime|null $value Value to set for the closedDateTime property.
    */
    public function setClosedDateTime(?DateTime $value ): void {
        $this->closedDateTime = $value;
    }

    /**
     * Sets the cloudAppStates property value. Security-related stateful information generated by the provider about the cloud application/s related to this alert.
     *  @param array<CloudAppSecurityState>|null $value Value to set for the cloudAppStates property.
    */
    public function setCloudAppStates(?array $value ): void {
        $this->cloudAppStates = $value;
    }

    /**
     * Sets the comments property value. Customer-provided comments on alert (for customer alert management) (supports update).
     *  @param array<string>|null $value Value to set for the comments property.
    */
    public function setComments(?array $value ): void {
        $this->comments = $value;
    }

    /**
     * Sets the confidence property value. Confidence of the detection logic (percentage between 1-100).
     *  @param int|null $value Value to set for the confidence property.
    */
    public function setConfidence(?int $value ): void {
        $this->confidence = $value;
    }

    /**
     * Sets the createdDateTime property value. Time at which the alert was created by the alert provider. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
     *  @param DateTime|null $value Value to set for the createdDateTime property.
    */
    public function setCreatedDateTime(?DateTime $value ): void {
        $this->createdDateTime = $value;
    }

    /**
     * Sets the description property value. Alert description.
     *  @param string|null $value Value to set for the description property.
    */
    public function setDescription(?string $value ): void {
        $this->description = $value;
    }

    /**
     * Sets the detectionIds property value. Set of alerts related to this alert entity (each alert is pushed to the SIEM as a separate record).
     *  @param array<string>|null $value Value to set for the detectionIds property.
    */
    public function setDetectionIds(?array $value ): void {
        $this->detectionIds = $value;
    }

    /**
     * Sets the eventDateTime property value. Time at which the event(s) that served as the trigger(s) to generate the alert occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.
     *  @param DateTime|null $value Value to set for the eventDateTime property.
    */
    public function setEventDateTime(?DateTime $value ): void {
        $this->eventDateTime = $value;
    }

    /**
     * Sets the feedback property value. Analyst feedback on the alert. Possible values are: unknown, truePositive, falsePositive, benignPositive. (supports update)
     *  @param AlertFeedback|null $value Value to set for the feedback property.
    */
    public function setFeedback(?AlertFeedback $value ): void {
        $this->feedback = $value;
    }

    /**
     * Sets the fileStates property value. Security-related stateful information generated by the provider about the file(s) related to this alert.
     *  @param array<FileSecurityState>|null $value Value to set for the fileStates property.
    */
    public function setFileStates(?array $value ): void {
        $this->fileStates = $value;
    }

    /**
     * Sets the historyStates property value. The historyStates property
     *  @param array<AlertHistoryState>|null $value Value to set for the historyStates property.
    */
    public function setHistoryStates(?array $value ): void {
        $this->historyStates = $value;
    }

    /**
     * Sets the hostStates property value. Security-related stateful information generated by the provider about the host(s) related to this alert.
     *  @param array<HostSecurityState>|null $value Value to set for the hostStates property.
    */
    public function setHostStates(?array $value ): void {
        $this->hostStates = $value;
    }

    /**
     * Sets the incidentIds property value. IDs of incidents related to current alert.
     *  @param array<string>|null $value Value to set for the incidentIds property.
    */
    public function setIncidentIds(?array $value ): void {
        $this->incidentIds = $value;
    }

    /**
     * Sets the investigationSecurityStates property value. The investigationSecurityStates property
     *  @param array<InvestigationSecurityState>|null $value Value to set for the investigationSecurityStates property.
    */
    public function setInvestigationSecurityStates(?array $value ): void {
        $this->investigationSecurityStates = $value;
    }

    /**
     * Sets the lastEventDateTime property value. The lastEventDateTime property
     *  @param DateTime|null $value Value to set for the lastEventDateTime property.
    */
    public function setLastEventDateTime(?DateTime $value ): void {
        $this->lastEventDateTime = $value;
    }

    /**
     * Sets the lastModifiedDateTime property value. Time at which the alert entity was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
     *  @param DateTime|null $value Value to set for the lastModifiedDateTime property.
    */
    public function setLastModifiedDateTime(?DateTime $value ): void {
        $this->lastModifiedDateTime = $value;
    }

    /**
     * Sets the malwareStates property value. Threat Intelligence pertaining to malware related to this alert.
     *  @param array<MalwareState>|null $value Value to set for the malwareStates property.
    */
    public function setMalwareStates(?array $value ): void {
        $this->malwareStates = $value;
    }

    /**
     * Sets the messageSecurityStates property value. The messageSecurityStates property
     *  @param array<MessageSecurityState>|null $value Value to set for the messageSecurityStates property.
    */
    public function setMessageSecurityStates(?array $value ): void {
        $this->messageSecurityStates = $value;
    }

    /**
     * Sets the networkConnections property value. Security-related stateful information generated by the provider about the network connection(s) related to this alert.
     *  @param array<NetworkConnection>|null $value Value to set for the networkConnections property.
    */
    public function setNetworkConnections(?array $value ): void {
        $this->networkConnections = $value;
    }

    /**
     * Sets the processes property value. Security-related stateful information generated by the provider about the process or processes related to this alert.
     *  @param array<Process>|null $value Value to set for the processes property.
    */
    public function setProcesses(?array $value ): void {
        $this->processes = $value;
    }

    /**
     * Sets the recommendedActions property value. Vendor/provider recommended action(s) to take as a result of the alert (for example, isolate machine, enforce2FA, reimage host).
     *  @param array<string>|null $value Value to set for the recommendedActions property.
    */
    public function setRecommendedActions(?array $value ): void {
        $this->recommendedActions = $value;
    }

    /**
     * Sets the registryKeyStates property value. Security-related stateful information generated by the provider about the registry keys related to this alert.
     *  @param array<RegistryKeyState>|null $value Value to set for the registryKeyStates property.
    */
    public function setRegistryKeyStates(?array $value ): void {
        $this->registryKeyStates = $value;
    }

    /**
     * Sets the securityResources property value. Resources related to current alert. For example, for some alerts this can have the Azure Resource value.
     *  @param array<SecurityResource>|null $value Value to set for the securityResources property.
    */
    public function setSecurityResources(?array $value ): void {
        $this->securityResources = $value;
    }

    /**
     * Sets the severity property value. The severity property
     *  @param AlertSeverity|null $value Value to set for the severity property.
    */
    public function setSeverity(?AlertSeverity $value ): void {
        $this->severity = $value;
    }

    /**
     * Sets the sourceMaterials property value. Hyperlinks (URIs) to the source material related to the alert, for example, provider's user interface for alerts or log search, etc.
     *  @param array<string>|null $value Value to set for the sourceMaterials property.
    */
    public function setSourceMaterials(?array $value ): void {
        $this->sourceMaterials = $value;
    }

    /**
     * Sets the status property value. The status property
     *  @param AlertStatus|null $value Value to set for the status property.
    */
    public function setStatus(?AlertStatus $value ): void {
        $this->status = $value;
    }

    /**
     * Sets the tags property value. User-definable labels that can be applied to an alert and can serve as filter conditions (for example 'HVA', 'SAW', etc.) (supports update).
     *  @param array<string>|null $value Value to set for the tags property.
    */
    public function setTags(?array $value ): void {
        $this->tags = $value;
    }

    /**
     * Sets the title property value. Alert title. Required.
     *  @param string|null $value Value to set for the title property.
    */
    public function setTitle(?string $value ): void {
        $this->title = $value;
    }

    /**
     * Sets the triggers property value. Security-related information about the specific properties that triggered the alert (properties appearing in the alert). Alerts might contain information about multiple users, hosts, files, ip addresses. This field indicates which properties triggered the alert generation.
     *  @param array<AlertTrigger>|null $value Value to set for the triggers property.
    */
    public function setTriggers(?array $value ): void {
        $this->triggers = $value;
    }

    /**
     * Sets the uriClickSecurityStates property value. The uriClickSecurityStates property
     *  @param array<UriClickSecurityState>|null $value Value to set for the uriClickSecurityStates property.
    */
    public function setUriClickSecurityStates(?array $value ): void {
        $this->uriClickSecurityStates = $value;
    }

    /**
     * Sets the userStates property value. Security-related stateful information generated by the provider about the user accounts related to this alert.
     *  @param array<UserSecurityState>|null $value Value to set for the userStates property.
    */
    public function setUserStates(?array $value ): void {
        $this->userStates = $value;
    }

    /**
     * Sets the vendorInformation property value. Complex type containing details about the security product/service vendor, provider, and subprovider (for example, vendor=Microsoft; provider=Windows Defender ATP; subProvider=AppLocker). Required.
     *  @param SecurityVendorInformation|null $value Value to set for the vendorInformation property.
    */
    public function setVendorInformation(?SecurityVendorInformation $value ): void {
        $this->vendorInformation = $value;
    }

    /**
     * Sets the vulnerabilityStates property value. Threat intelligence pertaining to one or more vulnerabilities related to this alert.
     *  @param array<VulnerabilityState>|null $value Value to set for the vulnerabilityStates property.
    */
    public function setVulnerabilityStates(?array $value ): void {
        $this->vulnerabilityStates = $value;
    }

}
